h1. Pololu MinIMU-9 + Robotis CM-900 (originally for Arduino) AHRS (Attitude and Heading Reference System)

Version: 1.2.2
Release Date: 2013-11-27
"www.pololu.com":http://www.pololu.com/

h2. Summary

This is a program (sketch) for the "Robotis CM-900 series":http://www.robotsource.org/bs/bd.php?bt=forum_CM9DeveloperWorld that interfaces with the Pololu MinIMU-9 inertial measurement units:

* "MinIMU-9 v2 &#40;L3GD20 and LSM303DLHC carrier)":http://www.pololu.com/catalog/product/1268
* "MinIMU-9 &#40;L3G4200D and LSM303DLM carrier)":http://www.pololu.com/catalog/product/1265 (discontinued)
* "MinIMU-9 &#40;L3G4200D and LSM303DLH carrier)":http://www.pololu.com/catalog/product/1264 (discontinued)

It also works with the "AltIMU-10 &#40;L3GD20, LSM303DLHC, and LPS331AP carrier)":http://www.pololu.com/catalog/product/1269, although the output from the LPS331AP barometer is not used.

This program processes the raw rotation, acceleration, and magnetic data from the MinIMU-9 to derive an estimate of the board's absolute orientation, which it outputs through the CM-900's USB interface, turning the MinIMU-9 and CM-900 into an attitude and heading reference system (AHRS).

A Python test program is also included. It communicates with the CM-900 serially and displays a 3D representation of the MinIMU-9 board, allowing you to visualize the output of the AHRS in real time.

Both the CM-900 software and Python test program are based on "sf9domahrs":http://code.google.com/p/sf9domahrs/ by Doug Weibel and Jose Julio, which is in turn based on "ArduIMU":http://code.google.com/p/ardu-imu/ v1.5 by Jordi Munoz, William Premerlani, Jose Julio, and Doug Weibel.

h2. Getting Started
 
h3. Software

I will probably not find all the places where the original code mentions the Arduino, but this fork is really adapted to the CM-900.

The CM-900 program uses Pololu's/mine "L3G":https://github.com/mw46d/l3g-cm9 and "LSM303":https://github.com/mw46d/lsm303-cm9 Arduino/CM-900 libraries, which can also be downloaded from GitHub. Follow the instructions on their respective pages to install the libraries.

The Python test program also has several dependencies you must install before you can run it:

* "Python 2.7":http://www.python.org/download/ (download the 32-bit version)
* "pywin32":http://sourceforge.net/projects/pywin32/files/pywin32/ (direct link: "pywin32-218.win32-py2.7.exe":http://sourceforge.net/projects/pywin32/files/pywin32/Build%20218/pywin32-218.win32-py2.7.exe/download)
* "pyserial":http://sourceforge.net/projects/pyserial/files/pyserial/ (direct link: "pyserial-2.5.win32.exe":http://sourceforge.net/projects/pyserial/files/pyserial/2.5/pyserial-2.5.win32.exe/download)
* "VPython 5":http://vpython.org/contents/download_windows.html (direct link: "VPython-Win-Py2.7-5.74.exe":http://vpython.org/contents/download/VPython-Win-Py2.7-5.74.exe)

I used the Python program on Ubuntu 13.04 (64bit) with the following pieces:

* Python2.7 - The system version
* "wxPython-src-3.0.0.0":http://www.wxpython.org/ - Build from source. This needs a lot of dependencies. But they are just an apt-get away;-)
* "VPython-wx 6":http://sourceforge.net/projects/vpythonwx/files/6.05-release/vpython-wx-src.6.05b.zip/download - Another build endevor;-)
 
After you have set up the prerequisites, download the archive from "GitHub":https://github.com/mw46d/minimu-9-ahrs-cm9 and decompress it.

h3. Hardware

Make the following connections with wires between the Arduino and the MinIMU-9:

h4. CM-900

pre.           CM-900      MinIMU-9
------------------------------------
                 3.3V  ->  VIN
                  GND  ->  GND
       Digital Pin 15  ->  SCL
       Digital Pin 14  ->  SDA

Other pin assignments will probably work as well. You will just have to adapt the Wire.begin() statements accordingly.

h3. Using the AHRS

From the Arduino environment, open MinIMU9AHRS.ino, which can be found in the MinIMU9AHRS folder.

By default, the Arduino code treats the positive X axis of the MinIMU-9 as forward and the negative Z axis as up (so that the components are on the bottom of the board and the silkscreen is on top). If you want the positive Z axis to be up instead (so that the components are on top), find the definition of @SENSOR_SIGN[9]@ at the beginning of MinIMU9AHRS.ino and uncomment the appropriate line (after commenting the original).

To ensure that the heading derived from the compass is accurate, you should change the @M_X_MIN@ through @M_Z_MAX@ calibration constants to appropriate values. You can use the Calibrate example from the "LSM303 library":https://github.com/mw46d/lsm303-cm9 to find the right values for your board.

In the Tools menu, select the appropriate board and serial port. Click the "Upload" button to compile the sketch and load it onto your Arduino.

When the AHRS program first starts running, it takes some readings to establish a baseline orientation, during which it expects both the roll and the pitch of the sensors to be zero. Therefore, it is important to keep the MinIMU-9 level for a few seconds after powering on or resetting the Arduino or connecting to it from a computer.

After performing the startup routine, the program constantly takes readings from the gyro, accelerometer, and magnetometer on the MinIMU-9 and calculates an estimate of the board's orientation. It outputs estimated roll, pitch, and yaw angles (in degrees) through the Arduino's serial interface, and you can view the output with the Arduino Serial Monitor.

Example output:

pre. !ANG:0.08,0.09,137.01
!ANG:0.14,0.11,137.04
!ANG:0.15,0.12,137.06

To visualize the output of the AHRS, you can run the Python test program (MinIMU-9-test.py) while the Arduino is connected to your computer. (You will probably have to edit the file first and change the definition of @ser@ to match the COM port your Arduino is using.) You should be able to see three indicators showing the roll, pitch, and yaw angles being calculated by the AHRS, as well as a 3D representation of the MinIMU-9 board (the arrow indicates the positive X direction). You can watch these change in real time as you move the board around.

!http://b.pololu-files.com/picture/0J3722.600.jpg!

h2. Version History

* 1.2.2 (2013-11-27): Updated to work with LSM303 library version 2.0.0.
* 1.2.1 (2013-03-15): Fixed issue with properly enabling high-resolution mode on accelerometer.
* 1.2.0 (2012-07-06): Added support for MinIMU-9 v2 (L3GD20 and LSM303DLHC); L3G4200D library dependency changed to L3G.
* 1.1.0 (2011-11-15): Added support for LSM303DLM; LSM303DLH library dependency changed to LSM303.
* 1.0.0 (2011-09-26): Original release.
